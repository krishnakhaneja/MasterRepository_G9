import tkinter as tk
import math

def evaluate_expression():
    try:
        result = eval(entry.get())
        entry.delete(0, tk.END)
        entry.insert(tk.END, str(result))
    except Exception as e:
        entry.delete(0, tk.END)
        entry.insert(tk.END, "Error")

def clear_entry():
    entry.delete(0, tk.END)

def append_to_entry(character):
    entry.insert(tk.END, character)

def calculate_sqrt():
    try:
        result = math.sqrt(eval(entry.get()))
        entry.delete(0, tk.END)
        entry.insert(tk.END, str(result))
    except Exception as e:
        entry.delete(0, tk.END)
        entry.insert(tk.END, "Error")

def calculate_log():
    try:
        result = math.log10(eval(entry.get()))
        entry.delete(0, tk.END)
        entry.insert(tk.END, str(result))
    except Exception as e:
        entry.delete(0, tk.END)
        entry.insert(tk.END, "Error")

def calculate_sin():
    try:
        result = math.sin(math.radians(eval(entry.get())))
        entry.delete(0, tk.END)
        entry.insert(tk.END, str(result))
    except Exception as e:
        entry.delete(0, tk.END)
        entry.insert(tk.END, "Error")

def calculate_cos():
    try:
        result = math.cos(math.radians(eval(entry.get())))
        entry.delete(0, tk.END)
        entry.insert(tk.END, str(result))
    except Exception as e:
        entry.delete(0, tk.END)
        entry.insert(tk.END, "Error")

def calculate_tan():
    try:
        result = math.tan(math.radians(eval(entry.get())))
        entry.delete(0, tk.END)
        entry.insert(tk.END, str(result))
    except Exception as e:
        entry.delete(0, tk.END)
        entry.insert(tk.END, "Error")


root = tk.Tk()
root.title("Scientific Calculator")
root.configure(bg='#1e1e1e')

entry = tk.Entry(root, width=30, font=('Helvetica', 16), bd=5, bg="#454545", fg="white")
entry.grid(row=0, column=0, columnspan=6, pady=10)

buttons = [
    ("7", 1, 0), ("8", 1, 1), ("9", 1, 2), ("(", 1, 3), (")", 1, 4),
    ("4", 2, 0), ("5", 2, 1), ("6", 2, 2), ("^", 2, 3), ("sqrt", 2, 4),
    ("1", 3, 0), ("2", 3, 1), ("3", 3, 2), ("+", 3, 3), ("-", 3, 4),
    ("0", 4, 0), (".", 4, 1), ("*", 4, 2), ("/", 4, 3),
    ("sin", 5, 0), ("cos", 5, 1), ("tan", 5, 2), ("log", 5, 3),
    ("C", 4, 4), ("=", 5, 4)
]

for (text, row, col) in buttons:
    button = tk.Button(root, text=text, width=5, height=2, font=('Helvetica', 14),
                       bg='#393939', fg='white', activebackground='#00bfff', activeforeground='white',
                       command=lambda t=text: append_to_entry(t))
    button.grid(row=row, column=col, padx=5, pady=5)

tk.Button(root, text="C", width=5, height=2, font=('Helvetica', 14),
          bg='#8b0000', fg='white', activebackground='#ff4500', activeforeground='white',
          command=clear_entry).grid(row=4, column=4, padx=5, pady=5)
tk.Button(root, text="=", width=5, height=2, font=('Helvetica', 14),
          bg='#008000', fg='white', activebackground='#32cd32', activeforeground='white',
          command=evaluate_expression).grid(row=5, column=4, padx=5, pady=5)
tk.Button(root, text="sqrt", width=5, height=2, font=('Helvetica', 14),
          bg='#ffd700', fg='black', activebackground='#ffd700', activeforeground='white',
          command=calculate_sqrt).grid(row=2, column=4, padx=5, pady=5)
tk.Button(root, text="log", width=5, height=2, font=('Helvetica', 14),
          bg='#ffd700', fg='black', activebackground='#ffd700', activeforeground='white',
          command=calculate_log).grid(row=5, column=3, padx=5, pady=5)
tk.Button(root, text="sin", width=5, height=2, font=('Helvetica', 14),
          bg='#ffd700', fg='black', activebackground='#ffd700', activeforeground='white',
          command=calculate_sin).grid(row=5, column=0, padx=5, pady=5)
tk.Button(root, text="cos", width=5, height=2, font=('Helvetica', 14),
          bg='#ffd700', fg='black', activebackground='#ffd700', activeforeground='white',
          command=calculate_cos).grid(row=5, column=1, padx=5, pady=5)
tk.Button(root, text="tan", width=5, height=2, font=('Helvetica', 14),
          bg='#ffd700', fg='black', activebackground='#ffd700', activeforeground='white',
          command=calculate_tan).grid(row=5, column=2, padx=5, pady=5)

root.mainloop()
